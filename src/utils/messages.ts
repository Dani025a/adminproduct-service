export const MESSAGES = {
  AUTH: {
    TOKEN_MISSING: 'Access token is missing.',
    INVALID_ACCESS_TOKEN: 'Invalid access token.',
    NOT_ADMIN: 'User is not an admin.',
  },
  PRODUCT: {
    PRODUCT_NOT_FOUND: 'Product not found.',
    PRODUCT_NAME_PRICE_REQUIRED: 'Product name and price are required.',
    INTERNAL_ERROR: 'Internal server error',
    ERROR_CREATING_PRODUCT: 'Error creating product',
    PRODUCT_CREATED: 'Product created successfully',
    INVALID_CATEGORY: 'The selected category is invalid. Please choose a valid category.',
    PRODUCT_VIEW_ERROR: 'An error occurred while viewing the product',
    CREATION_ERROR: 'Error creating product',
    FETCH_ERROR: 'An error occurred while fetching products',
    INVALID_FILTER_VALUES: 'Invalid filter values. Ensure filterValues is an array of valid filterOptionId and filterValueId objects.',
    PRODUCT_UPDATED: "Product updated successfully.",
    PRODUCT_DELETED: "Product deleted successfully.",
    NOT_FOUND: "Product not found.",
    ERROR_UPDATING_PRODUCT: "Error updating product.",
    ERROR_DELETING_PRODUCT: "Error deleting product.",
  },
  CATEGORY: {
    MAIN_CATEGORY_CREATION_ERROR: 'Error creating main category.',
    MAIN_CATEGORY_UPDATE_ERROR: 'Error updating main category.',
    MAIN_CATEGORY_DELETE_ERROR: 'Error deleting main category.',
    SUB_CATEGORY_CREATION_ERROR: 'Error creating sub category.',
    SUB_CATEGORY_UPDATE_ERROR: 'Error updating sub category.',
    SUB_CATEGORY_DELETE_ERROR: 'Error deleting sub category.',
    SUB_SUB_CATEGORY_CREATION_ERROR: 'Error creating sub-sub category.',
    SUB_SUB_CATEGORY_UPDATE_ERROR: 'Error updating sub-sub category.',
    SUB_SUB_CATEGORY_DELETE_ERROR: 'Error deleting sub-sub category.',
    MAIN_CATEGORY_ID_REQUIRED: 'Main category ID is required.',
    SUB_CATEGORY_ID_REQUIRED: 'Sub category ID is required.',
    SUB_CATEGORY_NOT_FOUND: (id: number) => `Sub category with ID ${id} not found.`,
  },
  QUERY: {
    INVALID_SORT_BY: 'Invalid sortBy parameter.',
    INVALID_SORT_ORDER: 'Invalid sortOrder parameter.',
  },
  FILTER: {
    SUB_SUBCATEGORY_ID_REQUIRED: 'Sub-subcategory ID is required.',
    INVALID_SUB_SUBCATEGORY_ID: 'Invalid sub-subcategory ID.',
    INVALID_FILTER_PAYLOAD: 'Invalid filter payload.',
    INVALID_FILTER_TYPE: 'Invalid filter type provided.',
    SUB_SUBCATEGORY_NOT_FOUND: 'Sub-subcategory not found.',
    FILTER_CREATION_ERROR: 'Error creating filter.',
    FETCH_ERROR: 'Error fetching filters.',
    FILTER_OPTION_NOT_FOUND: 'Filter option not found.',
    FILTER_OPTION_ID_REQUIRED: 'Filter option ID is required.',
    INVALID_FILTER_OPTION_ID: 'Invalid filter option ID.',
    NO_FILTER_VALUES_FOUND: 'No filter values found.',
    PRODUCT_OR_FILTER_NOT_FOUND: 'Product or filter not found.',
    INVALID_PRODUCT_FILTER_PAYLOAD: 'Invalid product filter payload.',
    INVALID_PRODUCT_FILTER_IDS: 'Invalid filter IDs.'
  },
};
